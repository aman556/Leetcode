Runtime: 12 ms, faster than 97.00% of C++ online submissions for Find First and Last Position of Element in Sorted Array.
Memory Usage: 14 MB, less than 55.24% of C++ online submissions for Find First and Last Position of Element in Sorted Array

class Solution {
public:
    int search1(vector<int>& nums, int target,int i,int j){
        if(i>j)
            return -1;
        
        int m=(i+j)/2;
        
        if((m==0 || nums[m-1]<target)&&nums[m]==target)
            return m;
        else if(nums[m]<target)
            return search1(nums,target,m+1,j);
        else
            return search1(nums,target,i,m-1);
        
    }
    int search2(vector<int>& nums, int target,int i,int j){
        if(i>j)
            return -1;
        int m=(i+j)/2;
        
        if((m==nums.size()-1 || nums[m+1]>target) && nums[m]==target)
            return m;
        else if(nums[m]<=target)
           return search2(nums,target,m+1,j);
        else
            return search2(nums,target,i,m-1);
        
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        int i=search1(nums,target,0,nums.size()-1);
        int j=search2(nums,target,0,nums.size()-1);
        return {i,j};
    }
};