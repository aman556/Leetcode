class Solution {
public:
    string longestPalindrome(string s) {
        int n=s.length(),start=0,max=1;
        if(n==0)
            return "";
	    int dp[n][n];
	    for(int i=0;i<n;i++)
	        for(int j=0;j<n;j++)
	            dp[i][j]=0;
	    
	    for(int i=0;i<n;i++)
	        dp[i][i]=1;
	    
	    for(int i=0;i<n;i++)
	        if(s[i]==s[i+1]){
	            dp[i][i+1]=1;
	            if(max==1){
	             start=i;
	                max=2;
	            }
	        }
	    for(int k=3;k<=n;k++)
	    {
	        for(int i=0;i<n-k+1;i++)
	        {
	            int j=i+k-1;
	            if(s[i]==s[j]&&dp[i+1][j-1]==1)
	            {
	                dp[i][j]=1;
	                if(max<k){
	                start=i;
	                max=k;
	                }
	            }
	        }
	    }string s1;
	    for(int i=start;i<start+max;i++)
	        s1=s1+s[i];
	       return s1;
    }
};