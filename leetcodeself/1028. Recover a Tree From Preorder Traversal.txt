Runtime: 20 ms, faster than 82.02% of C++ online submissions for Recover a Tree From Preorder Traversal.
Memory Usage: 19.4 MB, less than 91.91% of C++ online submissions for Recover a Tree From Preorder Traversal.
class Solution {
public:
    TreeNode* recoverFromPreorder(string S) {
        if(S.size()==0)
            return NULL;
        int l=0,i=0,f=0,val1=0;
         while(i<S.size()&&S[i]!='-'){
                val1=val1*10+S[i]-'0';
                i++;
            }
        TreeNode* root=new TreeNode(val1);

        
        stack<pair<TreeNode*,int>> st;
        st.push({root,0});
        while(i<S.size()){
            l=0;
            while(i<S.size()&&S[i]=='-'){
                l++;
                i++;
            }
            int val=0;
            while(i<S.size()&&S[i]!='-'){
                val=val*10+S[i]-'0';
                i++;
            }
            TreeNode* t=new TreeNode(val);
            //i++;
            while(!st.empty()&&l<=st.top().second)
                st.pop();
            if(!st.empty()){
            TreeNode* c=st.top().first;
           
                if(c->left==NULL)
                    c->left=t;
                else
                    c->right=t;
                st.push({t,l});
            }
           
        }
        return root;
    }
};