Runtime: 12 ms, faster than 95.31% of C++ online submissions for Construct Binary Tree from Inorder and Postorder Traversal.
Memory Usage: 25.9 MB, less than 87.44% of C++ online submissions for Construct Binary Tree from Inorder and Postorder Traversal.
class Solution {
int j=0;
public:
    int search(int val,vector<int>& inorder,int l,int r){
        for(int i=l;i<=r;i++)
            if(val==inorder[i])
                return i;
        return -1;
    }
    TreeNode* tree(vector<int>& postorder, vector<int>& inorder,int i,int n) {
        if(i>n||j<0)
            return NULL;
        TreeNode* root=new TreeNode(postorder[j]);
        
        int m=search(postorder[j],inorder,i,n);
        j--;
        root->right=tree(postorder,inorder,m+1,n);
        root->left=tree(postorder,inorder,i,m-1);
        
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        j=postorder.size()-1;
        return tree(postorder,inorder,0,postorder.size()-1);
    }
};