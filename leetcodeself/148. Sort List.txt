Runtime: 148 ms, faster than 30.88% of C++ online submissions for Sort List.
Memory Usage: 29.1 MB, less than 77.57% of C++ online submissions for Sort List.
class Solution {
public:
   ListNode*  merge(ListNode* a,ListNode* b){
        ListNode* res=NULL,*res1=NULL;
        while(a&&b){
            if(a->val<b->val){
                if(!res){
                    res=a;
                    res1=a;
                }
                else{
                    res1->next=a;
                    res1=a;
                }
                a=a->next;
                res1->next=NULL;
            }
            else{
                if(!res){
                    res=b;
                    res1=b;
                }
                else{
                    res1->next=b;
                    res1=b;
                }
                b=b->next;
                res1->next=NULL;
            }
        }
        if(a)
            res1->next=a;
        if(b)
            res1->next=b;
        return res; 
    }
    void split(ListNode* head,ListNode** a,ListNode** b){
        ListNode* sl=NULL,*fa=head;
        *a=head;
        while(fa){
            if(sl==NULL)
                sl=fa;
            else
                sl=sl->next;
            fa=fa->next;
            if(!fa)
                break;
            fa=fa->next;
            
        }
        *b=sl->next;
        sl->next=NULL;
    }
    void mergesort(ListNode** head){
        if(!*head || !(*head)->next)
            return;
        ListNode* a,*b;
        split(*head,&a,&b);
        mergesort(&a);
        mergesort(&b);
        *head=merge(a,b);
    }
    ListNode* sortList(ListNode* head) {
        mergesort(&head);
        return head;
    }
};