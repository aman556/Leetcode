Runtime: 156 ms, faster than 5.29% of C++ online submissions for Is Subsequence.
Memory Usage: 330.4 MB, less than 5.02% of C++ online submissions for Is Subsequence.
class Solution {
public:
    int dp[10000][1000];
    bool rec(string s, string t,int i,int j){
        if(j<0)
            return 1;
        if(i<0)
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        if(s[i]==t[j])
          return dp[i][j]=rec(s,t,i-1,j-1);
            return dp[i][j]=rec(s,t,i-1,j);
        return dp[i][j]=1;
    }
    bool isSubsequence(string t, string s) {
        memset(dp,-1,sizeof(dp));
        return rec(s,t,s.size()-1,t.size()-1);
    }
};

Runtime: 4 ms, faster than 26.43% of C++ online submissions for Is Subsequence.
Memory Usage: 10.8 MB, less than 6.58% of C++ online submissions for Is Subsequence.
class Solution {
public:
    int dp[101][10001];
  
    bool isSubsequence(string s, string t) {
        for(int i=1;i<=s.size();i++){
            for(int j=1;j<=t.size();j++){
                if(s[i-1]==t[j-1]){
                    dp[i][j]=dp[i-1][j-1]+1;  
                }
                else
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            }
        }
                                                    
        if(dp[s.size()][t.size()]==s.size())
        return 1;
        return 0;
    }
};
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Is Subsequence.
Memory Usage: 6.2 MB, less than 100.00% of C++ online submissions for Is Subsequence.
class Solution {
public:
    bool isSubsequence(string s, string t) {
      int i=t.size()-1,j=s.size()-1;
        while(i>=0&&j>=0){
            if(t[i]==s[j])
                j--;
            i--;
        }                                            
        if(j<0)
        return 1;
        return 0;
    }
};