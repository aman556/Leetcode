struct compare{
    bool operator()(pair<int,int> p1,pair<int,int> p2)
    {
        return p1.second>p2.second;
    }
};
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,compare> p;
        map<int,int> m;
        vector<int> v1;
        for(int i=0;i<nums.size();i++)
            m[nums[i]]++;
        auto i=m.begin();
        int j=0;
        for(;i!=m.end()&&j<k;i++,j++)
            p.push(make_pair(i->first,i->second));
        for(;i!=m.end();i++)
            if(p.top().second<i->second)
            {
                p.pop();
                 p.push(make_pair(i->first,i->second));
            }
        while(!p.empty())
        {
            v1.push_back(p.top().first);
            p.pop();
        }
        return v1;
    }
};